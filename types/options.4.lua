--# selene: allow(unused_variable)
---@diagnostic disable: unused-local

-- number	(default 5)
-- 			global
-- 	If 'modeline' is on 'modelines' gives the number of lines that is
-- 	checked for set commands.  If 'modeline' is off or 'modelines' is zero
-- 	no lines are checked.  See |modeline|.
vim.o.modelines = "5"
-- boolean	(default off)
-- 			global
-- 	When on, the title of the window will be set to the value of
-- 	'titlestring' (if it is not empty), or to:
-- 		filename [+=-] (path) - NVIM
-- 	Where:
-- 		filename	the name of the file being edited
-- 		-		indicates the file cannot be modified, 'ma' off
-- 		+		indicates the file was modified
-- 		=		indicates the file is read-only
-- 		=+		indicates the file is read-only and modified
-- 		(path)		is the path of the file being edited
-- 		- NVIM		the server name |v:servername| or "NVIM"
vim.o.title = "false"
-- number	(default 224)
-- 			global
-- 	The ASCII code for the first letter of the Hebrew alphabet.  The
-- 	routine that maps the keyboard in Hebrew mode, both in Insert mode
-- 	(when hkmap is set) and on the command-line (when hitting CTRL-_)
-- 	outputs the Hebrew characters in the range [aleph..aleph+26].
-- 	aleph=128 applies to PC code, and aleph=224 applies to ISO 8859-8.
-- 	See |rileft.txt|.
vim.o.aleph = "224"
-- string	(default (as a single string):
-- 				     "8:SpecialKey,~:EndOfBuffer,@:NonText,
-- 				     d:Directory,e:ErrorMsg,i:IncSearch,
-- 				     l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,
-- 				     a:LineNrAbove,b:LineNrBelow,
-- 				     N:CursorLineNr,r:Question,s:StatusLine,
-- 				     S:StatusLineNC,c:VertSplit,t:Title,
-- 				     v:Visual,V:VisualNOS,w:WarningMsg,
-- 				     W:WildMenu,f:Folded,F:FoldColumn,
-- 				     A:DiffAdd,C:DiffChange,D:DiffDelete,
-- 				     T:DiffText,>:SignColumn,-:Conceal,
-- 				     B:SpellBad,P:SpellCap,R:SpellRare,
-- 				     L:SpellLocal,+:Pmenu,=:PmenuSel,
-- 				     x:PmenuSbar,X:PmenuThumb,*:TabLine,
-- 				     #:TabLineSel,_:TabLineFill,!:CursorColumn,
-- 				     .:CursorLine,o:ColorColumn,q:QuickFixLine,
-- 				     z:StatusLineTerm,Z:StatusLineTermNC")
-- 			global
-- 	This option can be used to set highlighting mode for various
-- 	occasions.  It is a comma separated list of character pairs.  The
-- 	first character in a pair gives the occasion, the second the mode to
-- 	use for that occasion.  The occasions are:
-- 	|hl-SpecialKey|	 8  Meta and special keys listed with ":map"
-- 	|hl-EndOfBuffer|   ~  lines after the last line in the buffer
-- 	|hl-NonText|	 @  '@' at the end of the window and
-- 			    characters from 'showbreak'
-- 	|hl-Directory|	 d  directories in CTRL-D listing and other special
-- 			    things in listings
-- 	|hl-ErrorMsg|	 e  error messages
-- 			 h  (obsolete, ignored)
-- 	|hl-IncSearch|	 i  'incsearch' highlighting
-- 	|hl-Search|	 l  last search pattern highlighting (see 'hlsearch')
-- 	|hl-MoreMsg|	 m  |more-prompt|
-- 	|hl-ModeMsg|	 M  Mode (e.g., "-- INSERT --")
-- 	|hl-LineNr|	 n  line number for ":number" and ":#" commands, and
-- 			    when 'number' or 'relativenumber' option is set.
-- 	|hl-LineNrAbove|   a  line number above the cursor for when the
-- 			    'relativenumber' option is set.
-- 	|hl-LineNrBelow|   b  line number below the cursor for when the
-- 			    'relativenumber' option is set.
-- 	|hl-CursorLineNr|  N like n for when 'cursorline' or 'relativenumber' is
-- 			    set.
-- 	|hl-Question|	 r  |hit-enter| prompt and yes/no questions
-- 	|hl-StatusLine|	 s  status line of current window |status-line|
-- 	|hl-StatusLineNC|  S  status lines of not-current windows
-- 	|hl-Title|	 t  Titles for output from ":set all", ":autocmd" etc.
-- 	|hl-VertSplit|	 c  column used to separate vertically split windows
-- 	|hl-Visual|	 v  Visual mode
-- 	|hl-VisualNOS|	 V  Visual mode when Vim does is "Not Owning the
-- 			    Selection" Only X11 Gui's |gui-x11| and
-- 			    |xterm-clipboard|.
-- 	|hl-WarningMsg|	 w  warning messages
-- 	|hl-WildMenu|	 W  wildcard matches displayed for 'wildmenu'
-- 	|hl-Folded|	 f  line used for closed folds
-- 	|hl-FoldColumn|	 F  'foldcolumn'
-- 	|hl-DiffAdd|	 A  added line in diff mode
-- 	|hl-DiffChange|	 C  changed line in diff mode
-- 	|hl-DiffDelete|	 D  deleted line in diff mode
-- 	|hl-DiffText|	 T  inserted text in diff mode
-- 	|hl-SignColumn|	 >  column used for |signs|
-- 	|hl-Conceal|	 -  the placeholders used for concealed characters
-- 			    (see 'conceallevel')
-- 	|hl-SpellBad|	 B  misspelled word |spell|
-- 	|hl-SpellCap|	 P  word that should start with capital |spell|
-- 	|hl-SpellRare|	 R  rare word |spell|
-- 	|hl-SpellLocal|	 L  word from other region |spell|
-- 	|hl-Pmenu|	 +  popup menu normal line
-- 	|hl-PmenuSel|	 =  popup menu selected line
-- 	|hl-PmenuSbar|	 x  popup menu scrollbar
-- 	|hl-PmenuThumb|	 X  popup menu scrollbar thumb
vim.o.highlight = "8:SpecialKey,~:EndOfBuffer,z:TermCursor,Z:TermCursorNC,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,a:LineNrAbove,b:LineNrBelow,N:CursorLineNr,G:CursorLineSign,O:CursorLineFoldr:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn,q:QuickFixLine,0:Whitespace,I:NormalNC"
-- number	(Vim default: <Tab>, Vi default: CTRL-E)
-- 			global
-- 	Character you have to type to start wildcard expansion in the
-- 	command-line, as specified with 'wildmode'.
-- 	More info here: |cmdline-completion|.
-- 	The character is not recognized when used inside a macro.  See
-- 	'wildcharm' for that.
-- 	Although 'wc' is a number option, you can set it to a special key: >
-- 		:set wc=<Esc>
-- <
vim.o.wildchar = "9"
-- string	(Vim default for
-- 				   Win32:  !,'100,<50,s10,h,rA:,rB:
-- 				   others: !,'100,<50,s10,h
-- 				 Vi default: "")
-- 			global
-- 	When non-empty, the shada file is read upon startup and written
-- 	when exiting Vim (see |shada-file|).  The string should be a comma
-- 	separated list of parameters, each consisting of a single character
-- 	identifying the particular parameter, followed by a number or string
-- 	which specifies the value of that parameter.  If a particular
-- 	character is left out, then the default value is used for that
-- 	parameter.  The following is a list of the identifying characters and
-- 	the effect of their value.
-- 	CHAR	VALUE	~
-- 							*shada-!*
-- 	!	When included, save and restore global variables that start
-- 		with an uppercase letter, and don't contain a lowercase
-- 		letter.  Thus "KEEPTHIS and "K_L_M" are stored, but "KeepThis"
-- 		and "_K_L_M" are not.  Nested List and Dict items may not be
-- 		read back correctly, you end up with an empty item.
-- 							*shada-quote*
-- 	"	Maximum number of lines saved for each register.  Old name of
-- 		the '<' item, with the disadvantage that you need to put a
-- 		backslash before the ", otherwise it will be recognized as the
-- 		start of a comment!
-- 							*shada-%*
-- 	%	When included, save and restore the buffer list.  If Vim is
-- 		started with a file name argument, the buffer list is not
-- 		restored.  If Vim is started without a file name argument, the
-- 		buffer list is restored from the shada file.  Quickfix
-- 		('buftype'), unlisted ('buflisted'), unnamed and buffers on
-- 		removable media (|shada-r|) are not saved.
-- 		When followed by a number, the number specifies the maximum
-- 		number of buffers that are stored.  Without a number all
-- 		buffers are stored.
-- 							*shada-'*
-- 	'	Maximum number of previously edited files for which the marks
-- 		are remembered.  This parameter must always be included when
-- 		'shada' is non-empty.
-- 		Including this item also means that the |jumplist| and the
-- 		|changelist| are stored in the shada file.
-- 							*shada-/*
-- 	/	Maximum number of items in the search pattern history to be
-- 		saved.  If non-zero, then the previous search and substitute
-- 		patterns are also saved.  When not included, the value of
-- 		'history' is used.
-- 							*shada-:*
-- 	:	Maximum number of items in the command-line history to be
-- 		saved.  When not included, the value of 'history' is used.
-- 							*shada-<*
-- 	<	Maximum number of lines saved for each register.  If zero then
-- 		registers are not saved.  When not included, all lines are
-- 		saved.  '"' is the old name for this item.
-- 		Also see the 's' item below: limit specified in KiB.
-- 							*shada-@*
-- 	@	Maximum number of items in the input-line history to be
-- 		saved.  When not included, the value of 'history' is used.
-- 							*shada-c*
-- 	c	Dummy option, kept for compatibility reasons.  Has no actual
-- 		effect: ShaDa always uses UTF-8 and 'encoding' value is fixed
-- 		to UTF-8 as well.
-- 							*shada-f*
-- 	f	Whether file marks need to be stored.  If zero, file marks ('0
-- 		to '9, 'A to 'Z) are not stored.  When not present or when
-- 		non-zero, they are all stored.  '0 is used for the current
-- 		cursor position (when exiting or when doing |:wshada|).
-- 							*shada-h*
-- 	h	Disable the effect of 'hlsearch' when loading the shada
-- 		file.  When not included, it depends on whether ":nohlsearch"
-- 		has been used since the last search command.
-- 							*shada-n*
-- 	n	Name of the shada file.  The name must immediately follow
-- 		the 'n'.  Must be at the end of the option!  If the
-- 		'shadafile' option is set, that file name overrides the one
-- 		given here with 'shada'.  Environment variables are
-- 		expanded when opening the file, not when setting the option.
-- 							*shada-r*
-- 	r	Removable media.  The argument is a string (up to the next
-- 		',').  This parameter can be given several times.  Each
-- 		specifies the start of a path for which no marks will be
-- 		stored.  This is to avoid removable media.  For Windows you
-- 		could use "ra:,rb:".  You can also use it for temp files,
-- 		e.g., for Unix: "r/tmp".  Case is ignored.
-- 							*shada-s*
-- 	s	Maximum size of an item contents in KiB.  If zero then nothing
-- 		is saved.  Unlike Vim this applies to all items, except for
-- 		the buffer list and header.  Full item size is off by three
-- 		unsigned integers: with `s10` maximum item size may be 1 byte
-- 		(type: 7-bit integer) + 9 bytes (timestamp: up to 64-bit
-- 		integer) + 3 bytes (item size: up to 16-bit integer because
-- 		2^8 < 10240 < 2^16) + 10240 bytes (requested maximum item
-- 		contents size) = 10253 bytes.
vim.o.shada = "!,'100,<50,s10,h"
-- boolean	(Vim default: on, Vi default: off)
-- 			global
-- 	When on, listings pause when the whole screen is filled.  You will get
-- 	the |more-prompt|.  When this option is off there are no pauses, the
-- 	listing continues until finished.
vim.o.more = "true"
-- string	(default "")
-- 			global
vim.o.mouse = ""
-- boolean	(default off)
-- 			global
-- 			{only works in the GUI}
-- 	The window that the mouse pointer is on is automatically activated.
-- 	When changing the window layout or window focus in another way, the
-- 	mouse pointer is moved to the window with keyboard focus.  Off is the
-- 	default because it makes using the pull down menus a little goofy, as
-- 	a pointer transit may activate a window unintentionally.
vim.o.mousefocus = "false"
-- string	(default "")
-- 			global
-- 	This is a comma separated list of words, which specifies when to start
-- 	Select mode instead of Visual mode, when a selection is started.
-- 	Possible values:
-- 	   mouse	when using the mouse
-- 	   key		when using shifted special keys
-- 	   cmd		when using "v", "V" or CTRL-V
-- 	See |Select-mode|.
-- 	The 'selectmode' option is set by the |:behave| command.
vim.o.selectmode = ""
-- boolean	(default on)
-- 			global
-- 			{only works in the GUI}
-- 	When on, the mouse pointer is hidden when characters are typed.
-- 	The mouse pointer is restored when the mouse is moved.
vim.o.mousehide = "true"
-- boolean	(default on)
-- 			global
-- 	Allows for mappings to work recursively.  If you do not want this for
-- 	a single entry, use the :noremap[!] command.
-- 	NOTE: To avoid portability problems with Vim scripts, always keep
-- 	this option at the default "on".  Only switch it off when working with
-- 	old Vi scripts.
vim.o.remap = "true"
-- boolean (default on)
-- 			global
-- 	When on and 'termbidi' is off, the required visual character
-- 	corrections that need to take place for displaying the Arabic language
-- 	take effect.  Shaping, in essence, gets enabled; the term is a broad
-- 	one which encompasses:
-- 	  a) the changing/morphing of characters based on their location
-- 	     within a word (initial, medial, final and stand-alone).
-- 	  b) the enabling of the ability to compose characters
-- 	  c) the enabling of the required combining of some characters
-- 	When disabled the display shows each character's true stand-alone
-- 	form.
-- 	Arabic is a complex language which requires other settings, for
-- 	further details see |arabic.txt|.
vim.o.arabicshape = "true"
-- number	(default 4000)
-- 			global
-- 	If this many milliseconds nothing is typed the swap file will be
-- 	written to disk (see |crash-recovery|).  Also used for the
-- 	|CursorHold| autocommand event.
vim.o.updatetime = "4000"
-- boolean	(default off)
-- 			global
-- 	Allow CTRL-_ in Insert and Command-line mode.  This is default off, to
-- 	avoid that users that accidentally type CTRL-_ instead of SHIFT-_ get
-- 	into reverse Insert mode, and don't know how to get out.  See
-- 	'revins'.
vim.o.allowrevins = "false"
-- string	(default "i:beam,r:beam,s:updown,sd:cross,
-- 					m:no,ml:up-arrow,v:rightup-arrow")
-- 			global
-- 	This option tells Vim what the mouse pointer should look like in
-- 	different modes.  The option is a comma separated list of parts, much
-- 	like used for 'guicursor'.  Each part consist of a mode/location-list
-- 	and an argument-list:
-- 		mode-list:shape,mode-list:shape,..
-- 	The mode-list is a dash separated list of these modes/locations:
-- 			In a normal window: ~
-- 		n	Normal mode
-- 		v	Visual mode
-- 		ve	Visual mode with 'selection' "exclusive" (same as 'v',
-- 			if not specified)
-- 		o	Operator-pending mode
-- 		i	Insert mode
-- 		r	Replace mode
vim.o.mouseshape = ""
-- string (default: "single")
-- 			global
-- 	Tells Vim what to do with characters with East Asian Width Class
-- 	Ambiguous (such as Euro, Registered Sign, Copyright Sign, Greek
-- 	letters, Cyrillic letters).
vim.o.ambiwidth = "single"
-- number	(default 500)
-- 			global
-- 	Defines the maximum time in msec between two mouse clicks for the
-- 	second click to be recognized as a multi click.
vim.o.mousetime = "500"
-- string	(default ">", "| tee", "|& tee" or "2>&1| tee")
-- 			global
-- 	String to be used to put the output of the ":make" command in the
-- 	error file.  See also |:make_makeprg|.  See |option-backslash| about
-- 	including spaces and backslashes.
-- 	The name of the temporary file can be represented by "%s" if necessary
-- 	(the file name is appended automatically if no %s appears in the value
-- 	of this option).
-- 	For Windows the default is ">".  The output is directly saved in a file
-- 	and not echoed to the screen.
-- 	For Unix the default it "| tee".  The stdout of the compiler is saved
-- 	in a file and echoed to the screen.  If the 'shell' option is "csh" or
-- 	"tcsh" after initializations, the default becomes "|& tee".  If the
-- 	'shell' option is "sh", "ksh", "mksh", "pdksh", "zsh" or "bash" the
-- 	default becomes "2>&1| tee".  This means that stderr is also included.
-- 	Before using the 'shell' option a path is removed, thus "/bin/sh" uses
-- 	"sh".
-- 	The initialization of this option is done after reading the vimrc
-- 	and the other initializations, so that when the 'shell' option is set
-- 	there, the 'shellpipe' option changes automatically, unless it was
-- 	explicitly set before.
-- 	When 'shellpipe' is set to an empty string, no redirection of the
-- 	":make" output will be done.  This is useful if you use a 'makeprg'
-- 	that writes to 'makeef' by itself.  If you want no piping, but do
-- 	want to include the 'makeef', set 'shellpipe' to a single space.
-- 	Don't forget to precede the space with a backslash: ":set sp=\ ".
-- 	In the future pipes may be used for filtering and this option will
-- 	become obsolete (at least for Unix).
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.shellpipe = "2>&1| tee"
-- boolean (default off)
-- 			global
-- 	When on, Vim will change the current working directory whenever you
-- 	open a file, switch buffers, delete a buffer or open/close a window.
-- 	It will change to the directory containing the file which was opened
-- 	or selected.
-- 	Note: When this option is on some plugins may not work.
vim.o.autochdir = "false"
-- string (default "")
-- 			global
-- 	The CJK character set to be used for CJK output from |:hardcopy|.
-- 	See |pmbcs-option|.
vim.o.printmbcharset = ""
-- string	(default "")
-- 			global
-- 	This option allows switching your keyboard into a special language
-- 	mode.  When you are typing text in Insert mode the characters are
-- 	inserted directly.  When in Normal mode the 'langmap' option takes
-- 	care of translating these special characters to the original meaning
-- 	of the key.  This means you don't have to change the keyboard mode to
-- 	be able to execute Normal mode commands.
-- 	This is the opposite of the 'keymap' option, where characters are
-- 	mapped in Insert mode.
-- 	Also consider resetting 'langremap' to avoid 'langmap' applies to
-- 	characters resulting from a mapping.
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.langmap = ""
-- number	(default 1)
-- 			global
-- 	The minimal height of a window, when it's not the current window.
-- 	This is a hard minimum, windows will never become smaller.
-- 	When set to zero, windows may be "squashed" to zero lines (i.e. just a
-- 	status bar) if necessary.  They will return to at least one line when
-- 	they become active (since the cursor has to have somewhere to go.)
-- 	Use 'winheight' to set the minimal height of the current window.
-- 	This option is only checked when making a window smaller.  Don't use a
-- 	large number, it will cause errors when opening more than a few
-- 	windows.  A value of 0 to 3 is reasonable.
vim.o.winminheight = "1"
-- boolean	(default on)
-- 			global or local to buffer |global-local|
-- 	When a file has been detected to have been changed outside of Vim and
-- 	it has not been changed inside of Vim, automatically read it again.
-- 	When the file has been deleted this is not done, so you have the text
-- 	from before it was deleted.  When it appears again then it is read.
-- 	|timestamp|
-- 	If this option has a local value, use this command to switch back to
-- 	using the global value: >
-- 		:set autoread<
-- <
-- 				 *'autowrite'* *'aw'* *'noautowrite'* *'noaw'*
vim.o.autoread = "true"
-- boolean	(default on)			*E384* *E385*
-- 			global
-- 	Searches wrap around the end of the file.  Also applies to |]s| and
-- 	|[s|, searching for spelling mistakes.
vim.o.wrapscan = "true"
-- boolean	(default off)
-- 			global
-- 	Write the contents of the file, if it has been modified, on each
-- 	:next, :rewind, :last, :first, :previous, :stop, :suspend, :tag, :!,
-- 	:make, CTRL-] and CTRL-^ command; and when a :buffer, CTRL-O, CTRL-I,
-- 	'{A-Z0-9}, or `{A-Z0-9} command takes one to another file.
-- 	Note that for some commands the 'autowrite' option is not used, see
-- 	'autowriteall' for that.
-- 	Some buffers will not be written, specifically when 'buftype' is
-- 	"nowrite", "nofile", "terminal" or "prompt".
vim.o.autowrite = "false"
-- string	(default: "tab:> ,trail:-,nbsp:+"
-- 				 Vi default: "eol:$")
-- 			global or local to window |global-local|
-- 	Strings to use in 'list' mode and for the |:list| command.  It is a
-- 	comma separated list of string settings.
vim.o.listchars = "tab:> ,trail:-,nbsp:+"
